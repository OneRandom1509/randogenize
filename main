{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "// API stuff\nconst TRIVIA_API = 'https://opentdb.com/api.php?amount=1&type=multiple';\nconst GEMINI_API = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent';\nconst API_KEY = '{GEMINI_API_KEY}'; // Put your Gemini API key here\n\n// Game state\nlet quiz = null;\nlet score = 0;\nlet botAnswer = null;\n\nasync function getNewQuestion() {\n    const response = await fetch(TRIVIA_API);\n    const data = await response.json();\n    if (data && data.results && data.results.length > 0) {\n        quiz = data.results[0];\n        showQuestion(quiz);\n        getBotAnswer(quiz);\n    } else {\n        alert(\"Couldn't get a question. Try again!\");\n    }\n}\n\nfunction showQuestion(quiz) {\n    document.getElementById(\"question-box\").innerHTML = `\n        <h2>${quiz.question}</h2>\n        <ul id=\"choices\">\n            ${[...quiz.incorrect_answers, quiz.correct_answer]\n                .sort(() => Math.random() - 0.5) \n                .map((choice, index) => `\n                    <li>\n                        <button onclick=\"checkAnswer('${choice}')\">${choice}</button>\n                    </li>\n                `).join('')}\n        </ul>\n        <div class=\"buttons\">\n            <button onclick=\"showHint()\" title=\"Get hint\">Need a Hint? ‚ùì</button>\n            <button onclick=\"showBotAnswer()\" title=\"See bot answer\">See Bot's Answer ü§ñ</button>\n        </div>\n        <div id=\"hint-box\" style=\"display: none;\"></div>\n    `;\n}\n\nfunction makePrompt(question, choices, mode = 'answer') {\n    if (mode === 'answer') {\n        return `Help me with this multiple choice question:\nQuestion: ${question}\nChoices: ${choices.join(', ')}\nJust give me the best answer (A, B, C, or D) and a fun fact about this question's topic too.`;\n    } else {\n        return `Help me understand this question:\nQuestion: ${question}\nChoices: ${choices.join(', ')}\nGive a very slight hint, one line`;\n    }\n}\n\nasync function askBot(prompt) {\n    try {\n        const response = await fetch(`${GEMINI_API}?key=${API_KEY}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                contents: [{\n                    parts: [{\n                        text: prompt\n                    }]\n                }]\n            })\n        });\n\n        const data = await response.json();\n        return data.candidates[0].content.parts[0].text;\n    } catch (error) {\n        console.error('Bot error:', error);\n        return 'Bot is taking a coffee break, try again!';\n    }\n}\n\nasync function getBotAnswer(quiz) {\n    const choices = [...quiz.incorrect_answers, quiz.correct_answer];\n    const prompt = makePrompt(quiz.question, choices, 'answer');\n    botAnswer = await askBot(prompt);\n}\n\nfunction showBotAnswer() {\n    const hintBox = document.getElementById('hint-box');\n    hintBox.style.display = 'block';\n    hintBox.innerHTML = `<div class=\"bot-answer\">\n        <h3>Bot says:</h3>\n        <p>${botAnswer || 'Thinking...'}</p>\n    </div>`;\n}\n\nasync function showHint() {\n    const choices = [...quiz.incorrect_answers, quiz.correct_answer];\n    const prompt = makePrompt(quiz.question, choices, 'hint');\n    const hint = await askBot(prompt);\n    \n    const hintBox = document.getElementById('hint-box');\n    hintBox.style.display = 'block';\n    hintBox.innerHTML = `<div class=\"hint\">\n        <h3>Hint:</h3>\n        <p>${hint}</p>\n    </div>`;\n}\n\nfunction checkAnswer(picked) {\n    if (picked === quiz.correct_answer) {\n        score += 10;\n        alert(\"You got it! üéâ\");\n    } else {\n        score -= 5;\n        alert(\"Nope, try again! üòÖ\");\n    }\n    updateScore();\n    getNewQuestion();\n}\n\nfunction updateScore() {\n    document.getElementById(\"score\").innerText = `Score: ${score}`;\n}\n\ndocument.body.innerHTML = `\n    <div class=\"game\">\n        <h1>Quiz Time!</h1>\n        <div id=\"score\">Score: 0</div>\n        <div id=\"question-box\"></div>\n        <button onclick=\"getNewQuestion()\" class=\"start\">Let's Go!</button>\n    </div>\n    <style>\n        .game {\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n        }\n        .buttons {\n            display: flex;\n            gap: 10px;\n            margin-top: 20px;\n        }\n        .bot-answer, .hint {\n            margin-top: 20px;\n            padding: 15px;\n            background-color: #f5f5f5;\n            border-radius: 5px;\n        }\n        #choices {\n            list-style: none;\n            padding: 0;\n        }\n        #choices button {\n            width: 100%;\n            margin: 5px 0;\n            padding: 10px;\n        }\n        .start {\n            margin-top: 20px;\n        }\n    </style>\n`;\n\n// Start the game\ngetNewQuestion();",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}
